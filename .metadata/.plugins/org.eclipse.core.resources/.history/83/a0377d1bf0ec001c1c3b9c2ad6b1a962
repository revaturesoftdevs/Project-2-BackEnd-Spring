package com.group5devs.project2.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Service;

import com.group5devs.project2.dao.*;
import com.group5devs.project2.entity.EmployeeEntity;
import com.group5devs.project2.entity.ManagerEntity;
import com.group5devs.project2.entity.ReimbursementEntity;
import com.group5devs.project2.pojo.*;
import com.group5devs.project2.service.*;

import com.group5devs.project2.exceptions.*;




@Service
public class ManagerServiceImpl implements ManagerService {
	@Autowired
	ManagerDao managerDao;
	
	@Autowired
	ReimbursementDao reimbursementDao;
	

	@Override
	public ManagerPojo Login(ManagerPojo managerPojo) throws SystemException {
		String incomingUsername = managerPojo.getMgrUserName();
		String incomingPassword = managerPojo.getMgrPassword();
		
		
	}

	@Override
	public List<ReimbursementPojo> viewAllPendingReimbursements(int mgrId) throws SystemException {
		
		List <ReimbursementEntity> allPendingEntity = managerDao.findAllPendingReimbursementStatusAndMgrId(mgrId);
		List <ReimbursementPojo> allPendingPojo = new ArrayList<>();
		for (ReimbursementEntity fetchedPendingEntity : allPendingEntity) {
			ReimbursementPojo returnReimbursementPojo = new ReimbursementPojo(fetchedPendingEntity.getReimbursementId(), fetchedPendingEntity.getEmpId(), fetchedPendingEntity.getMgrId(), fetchedPendingEntity.getReimburementDesc(),fetchedPendingEntity.getReimbursementAmt(), fetchedPendingEntity.getReimbursementStatus());
			allPendingPojo.add(returnReimbursementPojo);
		}
		
		return allPendingPojo;
	}

	@Override
	public List<ReimbursementPojo> viewAllResolvedReimbursements(int mgrId) throws SystemException {
		List <ReimbursementEntity> allResolvedEntity = managerDao.findAllResolvedReimbursementStatusAndMgrId(mgrId);
		List <ReimbursementPojo> allResolvedPojo= new ArrayList<>();
		for (ReimbursementEntity fetchedResolvedEntity : allResolvedEntity ) {
			ReimbursementPojo returnReimbursementPojo = new ReimbursementPojo(fetchedResolvedEntity .getReimbursementId(), fetchedResolvedEntity.getEmpId(), fetchedResolvedEntity.getMgrId(), fetchedResolvedEntity.getReimburementDesc(),fetchedResolvedEntity.getReimbursementAmt(), fetchedResolvedEntity.getReimbursementStatus());
			allResolvedPojo.add(returnReimbursementPojo);
		}
		
		return allResolvedPojo;
	}

	@Override
	public List<ReimbursementPojo> viewIndividualReimbursement(int mgrId, int empId) throws SystemException {
		List <ReimbursementEntity> allIndividualEntity = managerDao.findAllByMgrIdAndEmpId(mgrId,empId);
		List <ReimbursementPojo> allResolvedPojo= new ArrayList<>();
		for (ReimbursementEntity fetchedResolvedEntity : allIndividualEntity ) {
			ReimbursementPojo returnReimbursementPojo = new ReimbursementPojo(fetchedResolvedEntity .getReimbursementId(), fetchedResolvedEntity.getEmpId(), fetchedResolvedEntity.getMgrId(), fetchedResolvedEntity.getReimburementDesc(),fetchedResolvedEntity.getReimbursementAmt(), fetchedResolvedEntity.getReimbursementStatus());
			allResolvedPojo.add(returnReimbursementPojo);
		}
		return allResolvedPojo;
	}

	@Override
	public boolean approveReimbursement(int empId, int reimbursementId) throws SystemException {
		// 2 step process
		// 1st - fetch the reimbursentment entoty by specfying the reimburse id
		Optional<ReimbursementEntity> fetchedReimburmentEntity = reimbursementDao.findById(reimbursementId);
		ReimbursementEntity reimEntity = fetchedReimburmentEntity.get();
		// 2nd -change the status of reimbursement to approved and save the reimbursement entity
		reimEntity.setReimbursementStatus("approved");
		reimbursementDao.save(reimEntity);
		
		return true;
	}

	@Override
	public boolean denyReimbursement(int empId, int reimbursementId) throws SystemException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<EmployeePojo> viewAllEmployees(int mgrId) throws SystemException {
		
		List<EmployeeEntity> allEmployeeEntity = managerDao.findAllByMgrId(mgrId);
		List <EmployeePojo> allEmployeePojo= new ArrayList<>();
		for (EmployeeEntity fetchedEntity : allEmployeeEntity ) {
			EmployeePojo returnEmployeePojo = new EmployeePojo(fetchedEntity.getEmpId(), fetchedEntity.getMgrId(), fetchedEntity.getEmpFirstName(), fetchedEntity.getEmpLastName(),fetchedEntity.getEmpUserName(), fetchedEntity.getEmpPassword());
			allEmployeePojo.add(returnEmployeePojo);
		}

		
		return allEmployeePojo;
	}

	
}